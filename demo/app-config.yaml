app:
  title: Backstage Demo
  baseUrl: http://localhost:3000
  # support:
  #   url: https://github.com/backstage/backstage/issues
  #   items:
  #     - title: Backstage Community
  #       icon: chat
  #       links:
  #         - url: https://backstage.io/docs/overview/support
  #           title: Support and community
  #     - title: Backstage News
  #       icon: docs
  #       links:
  #         - url: https://backstage.io/blog/
  #           title: Backstage Blog

organization:
  name: Backstage

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

# backend:
#   baseUrl: http://localhost:7007
#   listen:
#     port: 7007
#   csp:
#     connect-src: ["'self'", 'http:', 'https:']
#     img-src: ["'self'", 'data:', 'https://backstage.io']
#   cors:
#     origin: http://localhost:3000
#     methods: [GET, POST, PUT, DELETE]
#     credentials: true
#   database:
#     client: better-sqlite3
#     connection: ':memory:'

integrations:
  github:
    - host: github.com
      token: 
  azure:
    - host: dev.azure.com
      token: ${AZURE_TOKEN}

# auth:
#   environment: development
#   providers:
#     github:
#       development:
#         clientId: ${GITHUB_DEVELOPMENT_CLIENT_ID}
#         clientSecret: ${GITHUB_DEVELOPMENT_CLIENT_SECRET}

catalog:
  readonly: true
  rules:
    - allow: [Component, API, System, Domain, Resource, Location, User, Group]
  locations:
    # Backstage example components
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml

    # Backstage example systems
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml

    # Backstage example APIs
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml

    # Backstage example organization groups
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml

    # Backstage example domains
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-domains.yaml

    # Backstage example resources
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml

    # The backstage demo deployment (this)
    - type: url
      target: https://github.com/backstage/demo/blob/master/catalog-info.yaml

    # The backstage library repository
    - type: url
      target: https://github.com/backstage/backstage/blob/master/catalog-info.yaml

costInsights:
  engineerCost: 200000
  products:
    computeEngine:
      name: Compute Engine
      icon: compute
    cloudStorage:
      name: Cloud Storage
      icon: storage
    bigQuery:
      name: BigQuery
      icon: search
  metrics:
    DAU:
      name: Daily Active Users
      default: true
    MSC:
      name: Monthly Subscribers

# app-config.heroku.yaml replaces these values
# These configs here are required for config validation in CI to pass
techdocs:
  builder: 'external'
  generator:
    runIn: 'local'
  publisher:
    type: 'local'
